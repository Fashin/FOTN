[gd_scene load_steps=12 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
output_port_for_preview = 0
uniform_name = "color"

[sub_resource type="VisualShaderNodeInput" id=4]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeCompare" id=6]
output_port_for_preview = 0
function = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "health"
hint = 2
step = 0.01

[sub_resource type="VisualShaderNodeVectorInterp" id=8]

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 2

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;
uniform vec4 color : hint_color;
uniform float health : hint_range(0, 1, 0.01);



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = color.rgb;
	float n_out2p1 = color.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out8p0 = n_out2p0 * n_in8p1;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarUniform:6
	float n_out6p0 = health;

// Compare:5
	bool n_out5p0 = n_out4p0>=n_out6p0;

// VectorMix:7
	vec3 n_out7p0 = mix(n_out2p0, n_out8p0, vec3(n_out5p0 ? 1.0 : 0.0));

// Output:0
	COLOR.rgb = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -364.264, -447.248 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1000, 0 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -160, -300 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -100, 80 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 140, 60 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 520, 20 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 100, 220 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 800, 20 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 460, -280 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 6, 0, 5, 1, 2, 0, 7, 0, 7, 0, 0, 0, 5, 0, 7, 2, 2, 0, 8, 0, 8, 0, 7, 1 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/color = Color( 0.117647, 0.713726, 0.211765, 1 )
shader_param/health = 0.5

[sub_resource type="ViewportTexture" id=10]
viewport_path = NodePath("Viewport")

[node name="root" type="Sprite3D"]
transparent = false

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 640, 30 )

[node name="Sprite" type="Sprite" parent="Viewport"]
show_behind_parent = true
material = SubResource( 3 )
position = Vector2( 320, 33 )
scale = Vector2( 10, 1 )
texture = ExtResource( 1 )

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 0.25, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
billboard = 1
texture = SubResource( 10 )
